Piece = (x, y, size, type) ->
  this.x = x || 0
  this.y = y || 0
  this.size = size || 1
  this.type = type || 'B'

Piece.prototype.draw = (ctx) ->
  ctx.beginPath()
  ctx.arc(this.x, this.y, this.size, 0, 2 * Math.PI, true)
  ctx.lindWidth = 2
  if this.type == 'B'
    ctx.fillStyle = '#000000'
  else
    ctx.fillStyle = '#ffffff'
  ctx.fill()
  ctx.stroke()
  return

drawStarPoint = (x, y, ctx, size) ->
  ctx.beginPath()
  ctx.arc(x, y, size, 0, 2 * Math.PI, true)
  ctx.fill()
  return

drawBoard = (ctx, grid, size, dot_size) ->
  ctx.beginPath
  for i in [1..grid]
    ctx.moveTo(i * size, size)
    ctx.lineTo(i * size, grid * size)
    ctx.moveTo(size, i * size)
    ctx.lineTo(grid * size, i * size)
  ctx.stroke()
  drawStarPoint(size * 4, size * 4, ctx, dot_size)
  drawStarPoint(size * 10, size * 4, ctx, dot_size)
  drawStarPoint(size * 16, size * 4, ctx, dot_size)
  drawStarPoint(size * 16, size * 16, ctx, dot_size)
  if grid == 19
    drawStarPoint(size * 10, size * 16, ctx, dot_size)
    drawStarPoint(size * 10, size * 10, ctx, dot_size)
    drawStarPoint(size * 16, size * 10, ctx, dot_size)
    drawStarPoint(size * 4, size * 10, ctx, dot_size)
    drawStarPoint(size * 4, size * 16, ctx, dot_size)
  for i in [1..grid]
    for j in [1..grid]
      Piece piece = new Piece()
      piece.x = i * size
      piece.y = j * size
      piece.size = size / 2 - 3
      if (i + j) % 2 == 0
        piece.type = 'B'
      else
        piece.type = 'W'
      piece.draw(ctx)
  return

canvas = document.getElementById("board")
ctx = canvas.getContext('2d')

line = 19
size = 50
letters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T']
numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19].reverse()
$('#board').click (e) ->
  x = e.offsetX
  y = e.offsetY
  letter = letters[Math.round((x - size) / size)]
  number = numbers[Math.round((y - size) / size)]
  alert("#{x}, #{y}, #{letter}, #{number}")

drawBoard(ctx, line, size, 3)
